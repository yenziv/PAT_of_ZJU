#include<stdio.h>
#include<stdlib.h>

int graph[117][117]={0};
int visited[117]={0};
int N,M;

void DFS(int n){
	visited[n]=1;
	int i;
	for(i=1;i<=N;i++){
		if(graph[n][i]!=1000017&&i!=n)
			if(!visited[i])
				DFS(i);
	}
}
int main(){
	
	scanf("%d %d",&N,&M);
	int a,b,weight;
	int k,i,j;
	//初始化 graph
	for(i=1;i<=N;i++){
		for(j=1;j<=N;j++){
			if(i!=j)
				graph[i][j]=1000017;
		}
	} 
	
	
	
	for(i=0;i<M;i++){
		scanf("%d %d %d",&a,&b,&weight);
		graph[a][b]=weight;
		graph[b][a]=weight;
	}
	
	//判断此图是不是连通的
	DFS(1);
	for(i=1;i<=N;i++){
		if(visited[i]==0){
			printf("0");
			return 0;	
		}
	}
	
	
	int D[101][101]={0};
	for(i=1;i<=N;i++){
		for(j=1;j<=N;j++){
			D[i][j]=graph[i][j];
		}
	}
	
	for(k=1;k<=N;k++)
		for(i=1;i<=N;i++)
			for(j=1;j<=N;j++){
				if(D[i][k]+D[k][j]<D[i][j]){
					D[i][j]=D[i][k]+D[k][j];
				}
			}
	
	int Max;
	int max[101];
	for(i=1;i<=N;i++){
		Max=0;
		for(j=1;j<=N;j++){
			if(D[i][j]!=1000017&&i!=j){
				if(D[i][j]>Max)
					Max=D[i][j];  	// 这里应该用D  而不是graph 
			}
		}
		max[i]=Max;
	}
	
	int min=max[1];
	int minnum=1;;
	for(i=1;i<=N;i++){
		if(max[i]<min){
			min=max[i];
			minnum=i;
		}
	} 
	
	printf("%d %d",minnum,max[minnum]);
	
	return 0;
} 
